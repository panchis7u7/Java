package supermercado2;
import java.io.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

public class SupermercadoGui extends javax.swing.JFrame implements Alimentos, Serializable{
    private String nombre = "Poncho";
    private float subTotal = 0;
    File nombreArchivo;   
    private ObjectOutputStream salida;
    private ObjectInputStream entrada;    
    private ArrayList <Producto> productos = new ArrayList<Producto>();
    
    public SupermercadoGui() {
        super("Supermercado");
        initComponents();
    }
    //String item = jComboBoxProductos.getSelectedItem().toString()

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBoxProductos = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        jButtonAgregar = new javax.swing.JButton();
        jButtonLeerTexto = new javax.swing.JButton();
        jButtonGObjetos = new javax.swing.JButton();
        jButtonLObjetos = new javax.swing.JButton();
        jButtonMLista = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldPrecio = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldCantidad = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldDescuento = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBoxProductos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Verdura", "Carne", "Lacteo", "Bebida" }));
        jComboBoxProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxProductosActionPerformed(evt);
            }
        });

        jLabel1.setText("Producto");

        area.setColumns(20);
        area.setRows(5);
        jScrollPane1.setViewportView(area);

        jButtonAgregar.setText("Agregar Objeto");
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarActionPerformed(evt);
            }
        });

        jButtonLeerTexto.setText("Leer de Texto");
        jButtonLeerTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLeerTextoActionPerformed(evt);
            }
        });

        jButtonGObjetos.setText("Guardar Objetos");
        jButtonGObjetos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGObjetosActionPerformed(evt);
            }
        });

        jButtonLObjetos.setText("Leer Objetos");
        jButtonLObjetos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLObjetosActionPerformed(evt);
            }
        });

        jButtonMLista.setText("Mostrar Lista");
        jButtonMLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMListaActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre");

        jTextFieldNombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldNombre.setText("Nombre");
        jTextFieldNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNombreActionPerformed(evt);
            }
        });

        jLabel3.setText("$ Kilo/unidad");

        jTextFieldPrecio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldPrecio.setText("0");
        jTextFieldPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPrecioActionPerformed(evt);
            }
        });

        jLabel4.setText("Kg/unidad");

        jTextFieldCantidad.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldCantidad.setText("0");
        jTextFieldCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCantidadActionPerformed(evt);
            }
        });

        jLabel5.setText("Descuento");

        jTextFieldDescuento.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldDescuento.setText("0");
        jTextFieldDescuento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDescuentoActionPerformed(evt);
            }
        });

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBoxProductos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldNombre)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldCantidad)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldPrecio))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonLObjetos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonGObjetos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonLeerTexto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonMLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButtonAgregar)
                    .addComponent(jButtonLeerTexto))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonLObjetos)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonGObjetos)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonMLista)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxProductosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxProductosActionPerformed

    private void jButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarActionPerformed
        String item = jComboBoxProductos.getSelectedItem().toString();
        String nombre = jTextFieldNombre.getText();
        float precioKU = Float.parseFloat(jTextFieldPrecio.getText());
        float CantidadKU = Float.parseFloat(jTextFieldCantidad.getText());
        float Descuento = Float.parseFloat(jTextFieldDescuento.getText());
        switch (item){
            case "Verdura":
                productos.add(new Verdura(nombre, precioKU, CantidadKU, Descuento));
                break;
            case "Carne":
                productos.add(new Carne(nombre, precioKU, CantidadKU, Descuento));
                break;
            case "Lacteo":
                productos.add(new Lacteo(nombre, precioKU, (short) CantidadKU, Descuento));
                break;
            case "Bebida":
                productos.add(new Bebida(nombre, precioKU, (short) CantidadKU, Descuento));
                break;
        }
        
    }//GEN-LAST:event_jButtonAgregarActionPerformed

    private void jButtonLeerTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLeerTextoActionPerformed
        try {
        File archivo = new File ("Datos.txt");
        Scanner flujo = new Scanner(archivo);
        leerDeArchivo(flujo);
        }catch (FileNotFoundException err){}
    }//GEN-LAST:event_jButtonLeerTextoActionPerformed

    private void jButtonGObjetosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGObjetosActionPerformed
       guardarEnArchivo();
    }//GEN-LAST:event_jButtonGObjetosActionPerformed

    private void jButtonLObjetosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLObjetosActionPerformed
        leerDeArchivo();
    }//GEN-LAST:event_jButtonLObjetosActionPerformed

    private void jButtonMListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMListaActionPerformed
        this.lista(area);
    }//GEN-LAST:event_jButtonMListaActionPerformed

    private void jTextFieldPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPrecioActionPerformed

    private void jTextFieldCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCantidadActionPerformed

    private void jTextFieldDescuentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDescuentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDescuentoActionPerformed

    private void jTextFieldNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNombreActionPerformed
       
    public void lista(JTextArea salida){
        System.out.println("\nSupermercado "+ nombre +"\n");
        salida.setText("\nSupermercado "+ nombre +"\n");
        mostrarLista("Verdura", encabezadoKg(), salida);   //Se manda un objeto, para señalar que tipo de objetos se quieren mostrar
        mostrarLista("Carne", encabezadoKg(), salida);
        mostrarLista("Lacteo", encabezadoCan(), salida);
        mostrarLista("Bebida", encabezadoCan(), salida);
        System.out.println("\n\nCosto total de la lista: "+ Util.formato(costearLista(), ANCHO4));
        salida.append(Util.formato("\n\n", ANCHO5) + Util.formato("\t\t", ANCHO5) + Util.formato("Total:", ANCHO4) + " " +Util.formato(calcularPrecio(), ANCHO1));
    }
    
       public void mostrarLista(String tipo, String encabezado, JTextArea salida){ //muestra todos los articulos de su respectivo apartamento
        System.out.println("\n" /*+ "Departamento de "*/ + tipo.concat("s") + "\n" + encabezado);
        salida.append("\n\n" /*+ "Departamento de "*/ + tipo.concat("s") + "\n" + encabezado);
        for (Producto  i: productos){
            if (tipo.compareToIgnoreCase(i.tipo) == 0){
            System.out.println(i);
            salida.append("\n" + i.mostrarDatos("\t"));
            subTotal += i.calcularPrecio();
            }
        }
                    salida.append(Util.formato("\n\n", ANCHO5) + Util.formato("\t\t", ANCHO5) + Util.formato("SubTotal:\t", ANCHO1) + Util.formato(subTotal, ANCHO1));
                    subTotal = 0;
    }
    
    private String encabezadoKg(){
        return Util.formato("Producto", ANCHO1)+ "\t" +
               Util.formato("Precio por kg", ANCHO2)+ "\t" + 
               Util.formato("Peso en kg", ANCHO2)+ "\t" +
               Util.formato("Descuento%", ANCHO2)+ "\t" +
               Util.formato("Precio Total", ANCHO3);
    }
    
    private String encabezadoCan(){
        return Util.formato("Producto", ANCHO1)+ "\t" +
               Util.formato("Precio Unitario", ANCHO2)+ "\t" +
               Util.formato("Cantidad", ANCHO2)+ "\t"+
               Util.formato("Descuento%", ANCHO2)+ "\t" +
               Util.formato("Precio Total", ANCHO3);
    }
        
    public float calcularPrecio(){
        return costearLista();
    }
    
    public float costearLista(){
        float precioTotal = 0.0f;
        for (Producto i : productos)
            precioTotal += i.calcularPrecio();
        return precioTotal;
    }   
    
    public void leerDeArchivo(Scanner flujo){
        //this.nombre = nombre;
        for (int i = 0; flujo.hasNext(); i++) {
            String tipo = flujo.next();
            if (tipo.compareToIgnoreCase("V") == 0) {
                productos.add(new Verdura(flujo));
            } else if (tipo.compareToIgnoreCase("C") == 0) {
                productos.add( new Carne(flujo));
            } else if(tipo.compareToIgnoreCase("L") == 0) {
                productos.add(new Lacteo(flujo));
            }else if (tipo.compareToIgnoreCase("B") == 0){
                productos.add(new Bebida(flujo));
            } else {
                  System.out.println("\nOcurrio un eror al leer el departamento!");
            }
        }
    }
    
    public boolean definirArchivo(boolean abrir){
        JFileChooser selectorArchivo = new JFileChooser();
        selectorArchivo.setFileSelectionMode( JFileChooser.FILES_ONLY );
      
        int resultado = abrir?selectorArchivo.showSaveDialog( null ):
            selectorArchivo.showOpenDialog( null );
       if ( resultado == JFileChooser.CANCEL_OPTION )
            return false;

        nombreArchivo = selectorArchivo.getSelectedFile(); 
        // mostrar error si es inválido
        if ( nombreArchivo == null || nombreArchivo.getName().equals( "" ) ){
            JOptionPane.showMessageDialog( null, "Nombre de archivo inválido", 
            "Nombre de archivo inválido", JOptionPane.ERROR_MESSAGE );
            return false;
        }
        return true;
    }
    
        public void leerDeArchivo() {                                              
       if (this.definirArchivo(false)){
            try {
            entrada = new ObjectInputStream(new FileInputStream(nombreArchivo));
         }
         catch ( IOException excepcionES ) {
            JOptionPane.showMessageDialog( null, "Error al abrir el archivo", 
            "Error", JOptionPane.ERROR_MESSAGE );
            return;
         }
         boolean band = true;
         while (band) {
             try {
                productos.add( ( Producto ) entrada.readObject() );
            }
            catch ( EOFException excepcionFinDeArchivo ) {
                band = false;
            }
            catch ( IOException excepcionES ) {
                JOptionPane.showMessageDialog( null,
                "Error al leer del archivo"+excepcionES,
                "Error de lectura", JOptionPane.ERROR_MESSAGE );
                return;
            }
            catch ( ClassNotFoundException excepcionClaseNoEncontrada ) {
                JOptionPane.showMessageDialog(null,"No se pudo crear el objeto",
                "Clase no encontrada", JOptionPane.ERROR_MESSAGE );
                return;
            }
         }
         try {
             entrada.close();
         }
         catch( IOException excepcionES ) {
             JOptionPane.showMessageDialog( null, "Error al cerrar el archivo", 
             "Error", JOptionPane.ERROR_MESSAGE );
             System.exit( 1 );
         }
        }
    }
        
            public void guardarEnArchivo() {                                               
       if (this.definirArchivo(true)){
            try {
                salida = new ObjectOutputStream(
                         new FileOutputStream( nombreArchivo ) );
            }
            catch ( IOException excepcionES ) {
                JOptionPane.showMessageDialog(null,"Error al abrir el archivo", 
                "Error", JOptionPane.ERROR_MESSAGE );
            }
            for (Producto i : productos)
               try {
                   salida.writeObject( (Producto) i );
                   salida.flush();
               }
               catch ( IOException excepcionES ) {
                   JOptionPane.showMessageDialog( null,
                   "Error al escribir en el archivo"+excepcionES,
                   "Excepción de ES", JOptionPane.ERROR_MESSAGE );
               }
            try {
                salida.close();
            }
            catch( IOException excepcionES ) {
                JOptionPane.showMessageDialog(null,"Error al cerrar el archivo", 
                "Error", JOptionPane.ERROR_MESSAGE );
                System.exit( 1 );
            }
       }
    }
            
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SupermercadoGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SupermercadoGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SupermercadoGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SupermercadoGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SupermercadoGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea area;
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonGObjetos;
    private javax.swing.JButton jButtonLObjetos;
    private javax.swing.JButton jButtonLeerTexto;
    private javax.swing.JButton jButtonMLista;
    private javax.swing.JComboBox<String> jComboBoxProductos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldCantidad;
    private javax.swing.JTextField jTextFieldDescuento;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldPrecio;
    // End of variables declaration//GEN-END:variables
}
